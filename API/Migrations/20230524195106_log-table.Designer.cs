// <auto-generated />
using System;
using IPR_BE.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IPR_BE.Migrations
{
    [DbContext(typeof(TestReportDbContext))]
    [Migration("20230524195106_log-table")]
    partial class logtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IPR_BE.Models.TestReport.Candidate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("candidateEmail");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("candidateName");

                    b.HasKey("id")
                        .HasName("id");

                    b.ToTable("Candidates", (string)null);
                });

            modelBuilder.Entity("IPR_BE.Models.TestReport.InterviewBotLog", b =>
                {
                    b.Property<int>("logId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("logId"));

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.HasKey("logId")
                        .HasName("logId");

                    b.ToTable("InterviewBotLogs", (string)null);
                });

            modelBuilder.Entity("IPR_BE.Models.TestReport.TestAttempt", b =>
                {
                    b.Property<long>("attemptId")
                        .HasColumnType("bigint");

                    b.Property<int>("candidateId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<long>("testId")
                        .HasColumnType("bigint")
                        .HasColumnName("testId");

                    b.HasKey("attemptId")
                        .HasName("attemptId");

                    b.HasIndex("candidateId");

                    b.ToTable("TestAttempts", (string)null);
                });

            modelBuilder.Entity("IPR_BE.Models.TestReport.TestAttempt", b =>
                {
                    b.HasOne("IPR_BE.Models.TestReport.Candidate", null)
                        .WithMany()
                        .HasForeignKey("candidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
